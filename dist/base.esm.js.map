{"version":3,"file":"base.esm.js","sources":["src/common/Field.vue","src/utils/Errors.js","src/common/Fields.vue","src/config.js","src/mixins/HandlesValidationErrors.js","src/mixins/FieldLayoutMixin.js","src/common/EmptyLayout.vue","src/common/Asterisk.vue","src/layouts/VericalLayout.vue","src/layouts/HorizontalLayout.vue","src/layouts/InlineLayout.vue","src/fields/Undefined.vue","src/utils/props.js","src/mixins/FormField.js","src/utils/FieldList.js","src/mixins/FormComponent.js","src/fields/TextField.vue","src/fields/FileField.vue","src/fields/SelectField.vue","src/fields/RadiosField.vue","src/fields/CheckboxField.vue","src/fields/CheckboxesField.vue","src/fields/TextareaField.vue","src/fields/EditorField.vue","src/plugin.js","src/listing-fields/config.js","src/listing-fields/AttachmentPreview.vue","src/listing-fields/FormAttachmentField.vue","src/listing-fields/FormLocationField.vue","src/listing-fields/FormRelationField.vue","src/listing-fields/ListingPlugin.js"],"sourcesContent":["<template>\n\t<component\n\t\t:is=\"'form-' + field.component\"\n\t\t:field=\"field\"\n\t\t:model=\"model\"\n\t\t@input=\"input\"\n\t\t:errors=\"errors\"\n\t\t:event-bus=\"$events\"\n\t\t:layout=\"layout\"\n\t/>\n</template>\n\n<script>\n\texport default {\n\t\tname: \"Field\",\n\n\t\tprops: {\n\t\t\tfield: {\n\t\t\t\tdefault: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcomponent: 'undefined'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: Object,\n\t\t\terrors: {},\n\t\t\teventBus: { type: Object },\n\t\t\tlayout: {}\n\t\t},\n\n\t\tcomputed: {\n\t\t\t$events () {\n\t\t\t\treturn this.eventBus || this.$parent;\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\tinput: function ($event) {\n\t\t\t\tthis.$emit('input', $event)\n\t\t\t}\n\t\t},\n\t}\n</script>\n","class Errors {\n    /**\n     * Create a new Errors instance.\n     */\n    constructor(errors = {}) {\n        this.record(errors);\n    }\n\n    /**\n     * Get all the errors.\n     *\n     * @return {object}\n     */\n    all() {\n        return this.errors;\n    }\n\n    /**\n     * Determine if any errors exists for the given field or object.\n     *\n     * @param {string} field\n     */\n    has(field) {\n        let hasError = this.errors.hasOwnProperty(field);\n\n        if (!hasError) {\n            const errors = Object.keys(this.errors).filter(\n                e => e.startsWith(`${field}.`) || e.startsWith(`${field}[`)\n            );\n\n            hasError = errors.length > 0;\n        }\n\n        return hasError;\n    }\n\n    first(field) {\n        return this.get(field)[0];\n    }\n\n    get(field) {\n        return this.errors[field] || [];\n    }\n\n    /**\n     * Determine if we have any errors.\n     */\n    any() {\n        return Object.keys(this.errors).length > 0;\n    }\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     */\n    record(errors = {}) {\n        this.errors = errors;\n    }\n\n    /**\n     * Clear a specific field, object or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field) {\n        if (!field) {\n            this.errors = {};\n\n            return;\n        }\n        \n        let errors = Object.assign({}, this.errors);\n\n        Object.keys(errors)\n            .filter(e => e === field || e.startsWith(`${field}.`) || e.startsWith(`${field}[`))\n            .forEach(e => delete errors[e]);\n        \n        this.errors = errors;\n    }\n}\n\nexport default Errors;\n","<template>\n\t<div>\n\t\t<field\n\t\t\tv-for=\"field in fields\"\n\t\t\t:key=\"field.attribute\"\n\t\t\t:field=\"field\"\n\t\t\t:model=\"model\"\n\t\t\t:errors=\"errors\"\n\t\t\t:event-bus=\"$events\"\n\t\t\t:layout=\"layout\"  />\n\t</div>\n</template>\n\n<script>\n\timport Errors from '../utils/Errors';\n\n\texport default {\n\t\tname: \"Fields\",\n\n\t\tprops: {\n\t\t\tfields: {},\n\t\t\tmodel: Object,\n\t\t\terrors: {\n\t\t\t\tdefault: () => new Errors()\n\t\t\t},\n\t\t\teventBus: { type: Object },\n\t\t\tlayout: String\n\t\t},\n\n\t\tcomputed: {\n\t\t\t$events () {\n\t\t\t\treturn this.eventBus || this.$parent;\n\t\t\t}\n\t\t},\n\t}\n</script>\n","let config = {\n\tdefaultLayout: 'vertical',\n\terrorMessages: 'first',\n\terrorMessagesGlue: '<br />',\n};\n\nexport default config\n","import Errors from '../utils/Errors'\nimport config from '../config';\n\nexport default {\n\tprops: {\n\t\terrors: {\n\t\t\tdefault: () => new Errors(),\n\t\t},\n\t},\n\n\tdata: () => ({\n\t\terrorClass: '',\n\t}),\n\n\tcomputed: {\n\t\terrorClasses() {\n\t\t\treturn this.hasError ? [this.errorClass] : []\n\t\t},\n\n\t\thasError() {\n\t\t\treturn this.errors.has(this.field.attribute)\n\t\t},\n\n\t\terrorMessages() {\n\t\t\tif (this.hasError && config.errorMessages) {\n\t\t\t\treturn config.errorMessages === 'first'\n\t\t\t\t\t? this.errors.first(this.field.attribute)\n\t\t\t\t\t: this.errors.get(this.field.attribute).join(config.errorMessagesGlue)\n\t\t\t}\n\t\t},\n\t},\n}\n","import HandlesValidationErrors from './HandlesValidationErrors';\n\nexport default {\n\tmixins: [ HandlesValidationErrors ],\n\n\tprops: {\n\t\tfield: {type: Object, required: true},\n\t\tfieldLabel: {type: String},\n\t\tlayoutClass: {type: String},\n\t\tshowLabel: {type: Boolean, default: true},\n\t\tshowHelpText: {type: Boolean, default: true},\n\t},\n}\n","<template>\n  <div\n    :attribute=\"field.attribute\"\n    :class=\"layoutClass\">\n    <slot name=\"field\"/>\n  </div>\n</template>\n\n<script>\n  import FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n  export default {\n    mixins: [FieldLayoutMixin]\n  }\n</script>\n","<template>\n\t<sup class=\"label-asterisk text-danger\">*</sup>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'FormAsterisk'\n\t}\n</script>\n\n<style type=\"text/scss\" scoped>\n\t.label-asterisk {\n\t\ttop: -.1em;\n\t\tfont-size: 1em;\n\t}\n</style>\n","<template>\n\t<div class=\"form-group\"\n         :attribute=\"field.attribute\"\n         :class=\"errorClasses\">\n\t\t<label v-if=\"showLabel\"\n\t\t\t   :for=\"field.attribute\">\n\t\t\t{{ fieldLabel || field.label }}\n\t\t\t<form-asterisk v-if=\"field.required\" />\n\t\t</label>\n\t\t<label v-else class=\"placeholder-label\"\n\t\t\t   :for=\"field.attribute\">\n\t\t\t&nbsp;\n\t\t</label>\n\t\t<slot name=\"field\"/>\n\t\t<slot name=\"errors\">\n\t\t\t<div v-if=\"hasError\"\n\t\t\t\t v-html=\"errorMessages\"\n\t\t\t\t class=\"invalid-feedback d-block\">\n\t\t\t</div>\n\t\t</slot>\n\t\t<small v-if=\"showHelpText && field.helpText\"\n\t\t\t   class=\"form-text text-muted\">\n\t\t\t{{ field.helpText }}\n\t\t</small>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n\n<style type=\"text/scss\" scoped>\n\t.placeholder-label {\n\t\tdisplay: none;\n\t}\n\n\t.col .placeholder-label {\n\t\tdisplay: block;\n\t}\n\t[class*=\" col-\"] .placeholder-label {\n\t\tdisplay: block;\n\t}\n</style>\n","<template>\n\t<div class=\"form-group row\"\n         :attribute=\"field.attribute\"\n         :class=\"errorClasses\">\n\t\t<label v-if=\"showLabel\"\n\t\t\t   :for=\"field.attribute\"\n\t\t\t   class=\"col-sm-4 col-form-label text-sm-right\">\n\t\t\t{{ fieldLabel || field.label }}\n\t\t\t<form-asterisk v-if=\"field.required\" />\n\t\t</label>\n\t\t<div class=\"col-sm-8\" :class=\"{ 'offset-sm-4': !showLabel }\">\n\t\t\t<slot name=\"field\"/>\n\t\t\t<slot name=\"errors\">\n\t\t\t\t<div v-if=\"hasError\"\n\t\t\t\t\t v-html=\"errorMessages\"\n\t\t\t\t\t class=\"invalid-feedback d-block\">\n\t\t\t\t</div>\n\t\t\t</slot>\n\t\t\t<small v-if=\"showHelpText && field.helpText\"\n\t\t\t\t   class=\"form-text text-muted\">\n\t\t\t\t{{ field.helpText }}\n\t\t\t</small>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n","<template>\n\t<div class=\"d-inline-block mb-2 mr-sm-2\"\n         :attribute=\"field.attribute\"\n         :class=\"errorClasses\">\n\t\t<label class=\"sr-only\" :for=\"field.attribute\">\n\t\t\t{{ field.label || fieldLabel }}\n\t\t\t<form-asterisk v-if=\"field.required\" />\n\t\t</label>\n\t\t<slot name=\"field\"/>\n\t\t<slot name=\"errors\">\n\t\t\t<div v-if=\"hasError\"\n\t\t\t\t v-html=\"errorMessages\"\n\t\t\t\t class=\"invalid-tooltip d-block\">\n\t\t\t</div>\n\t\t</slot>\n\t\t<small v-if=\"showHelpText && field.helpText\" class=\"form-text text-muted\">\n\t\t\t{{ field.helpText }}\n\t\t</small>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n","<template>\n\n</template>\n\n<script>\n\texport default {\n\t\tname: 'FormUndefinedField'\n\t}\n</script>\n","import Vue from 'vue';\n\nexport function setProp(obj, props, value) {\n\tif (typeof props === \"string\") {\n\t\tprops = props.split('.');\n\t}\n\n\tconst prop = props.shift();\n\n\tif (!obj[prop] && props.length) {\n\t\tVue.set(obj, prop, {});\n\t}\n\n\tif (!props.length) {\n\t\tVue.set(obj, prop, value);\n\t\treturn;\n\t}\n\n\tsetProp(obj[prop], props, value);\n}\n\nexport function getProp(obj, props) {\n\tif (typeof props === \"string\") {\n\t\tprops = props.split('.');\n\t}\n\n\tconst prop = props.shift();\n\n\tif (!obj[prop] || !props.length) {\n\t\treturn obj[prop];\n\t}\n\n\treturn getProp(obj[prop], props);\n}\n","import keyBy from \"lodash-es/keyBy\";\nimport mapValues from \"lodash-es/mapValues\";\nimport isEqual from 'lodash-es/isEqual';\nimport has from 'lodash-es/has';\nimport HandlesValidationErrors from './HandlesValidationErrors';\nimport { getProp, setProp } from \"../utils/props\";\nimport config from \"../config\";\n\nexport default {\n\tmixins: [ HandlesValidationErrors ],\n\n\tprops: {\n\t\tfield: { type: Object, required: true },\n\t\tmodel: { type: Object },\n\t\teventBus: { type: Object },\n\t\tlayout: { type: String },\n\t\tlayoutClass: { type: String },\n\t},\n\n\tdata: () => ({\n\t\terrorClass: 'is-invalid',\n\t}),\n\n\tcomputed: {\n\t\t/**\n\t\t * Used for v-model binding on input element\n\t\t */\n\t\tfieldValue: {\n\t\t\tget() {\n\t\t\t\treturn this.value();\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.fill(value);\n\t\t\t},\n\t\t},\n\t\tlayoutComponent: function () {\n\t\t\treturn (this.layout || config.defaultLayout) + '-layout';\n\t\t},\n\t\t$events () {\n\t\t\treturn this.eventBus || this.$root;\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.setInitialValue();\n\n\t\tif (this.model) {\n\t\t\tif (!has(this.model, this.field.attribute)) {\n\t\t\t\tsetProp(this.model, this.field.attribute, this.field.value);\n\t\t\t}\n\n\t\t\tthis.$watch(\n\t\t\t\t() => getProp(this.model, this.field.attribute),\n\t\t\t\t(value) => {\n\t\t\t\t\tthis.field.value = value;\n\t\t\t\t\tthis.triggerChange();\n\t\t\t\t},\n\t\t\t\t{ deep: true }\n\t\t\t);\n\t\t}\n\n\t\t// Register a global event for setting the field's value\n\t\tthis.$events.$on('field-value-' + this.field.attribute, this.fill);\n\n\t\tif (this.field.depends && this.field.depends.length) {\n\t\t\tthis.field.depends.forEach(attr => {\n\t\t\t\tthis.$events.$on('field-change-' + attr, value => {\n\t\t\t\t\tthis.triggerDependentChange(attr, value);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.triggerDependentChange();\n\t\t}\n\t},\n\n\tdestroyed() {\n\t\tthis.$events.$off('field-value-' + this.field.attribute);\n\n\t\tif (this.field.depends && this.field.depends.length) {\n\t\t\tthis.field.depends.forEach(attr => {\n\t\t\t\tthis.$events.$off('field-change-' + attr);\n\t\t\t});\n\t\t}\n\t},\n\n\tmethods: {\n\t\t/*\n\t\t * Set the initial value for the field\n\t\t */\n\t\tsetInitialValue() {\n\t\t},\n\n\t\t/**\n\t\t * Perform some sanitize actions when filling the value\n\t\t *\n\t\t * @param value\n\t\t * @returns {*}\n\t\t */\n\t\tsanitizeValue(value) {\n\t\t\treturn value;\n\t\t},\n\n\t\t/**\n\t\t * Update the field's value\n\t\t * @param value\n\t\t */\n\t\tfill(value) {\n\t\t\tif (isEqual(value, this.fieldValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.model) {\n\t\t\t\tthis.field.value = this.sanitizeValue(value);\n\t\t\t\tthis.triggerChange();\n\t\t\t} else {\n\t\t\t\tsetProp(this.model, this.field.attribute, this.sanitizeValue(value));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get field's value\n\t\t * @returns {*}\n\t\t */\n\t\tvalue() {\n\t\t\tif (!this.model) {\n\t\t\t\treturn this.field.value;\n\t\t\t}\n\n\t\t\treturn getProp(this.model, this.field.attribute);\n\t\t},\n\n\t\ttriggerChange() {\n\t\t\tthis.$events.$emit('field-change', this.field.value, this.field.attribute);\n\t\t\tthis.$events.$emit('field-change-' + this.field.attribute, this.field.value);\n\t\t},\n\n\t\ttriggerDependentChange(attribute, value) {\n\t\t\tlet values = mapValues(keyBy(this.field.dependentFields, 'attribute'), 'value');\n\t\t\tthis.handleDependentChange(attribute, value, values)\n\t\t},\n\n\t\thandleDependentChange(attribute, value, values) {\n\t\t\t//console.log(this.field.attribute + ':handleDependentChange', arguments)\n\t\t}\n\t},\n}\n","import pick from \"lodash-es/pick\";\nimport values from \"lodash-es/values\";\nimport keyBy from \"lodash-es/keyBy\";\nimport omit from \"lodash-es/omit\";\nimport { setProp } from \"./props\";\nimport filter from \"lodash-es/filter\";\nimport find from \"lodash-es/find\";\nimport forOwn from \"lodash-es/forOwn\";\n\nexport class FieldList {\n\n\tconstructor(fields) {\n\t\tthis.list = fields;\n\t\tthis.byAttribute = keyBy(fields, 'attribute');\n\n\t\t// Collect dependencies and assign\n\t\tfields.forEach(field => {\n\t\t\t// Add default method to get form data attribute\n\t\t\tfield.formDataName = () => {\n\t\t\t\tlet name = field.attribute;\n\n\t\t\t\tif (field.attribute.indexOf('.') !== -1) {\n\t\t\t\t\tname = field\n\t\t\t\t\t\t.attribute.replace(/\\./, '[')\n\t\t\t\t\t\t.replace('.', '][') + ']'\n\t\t\t\t}\n\n\t\t\t\treturn name;\n\t\t\t};\n\n\t\t\t// Add default form data fill method\n\t\t\tfield.fillFormData = (formData) => {\n\t\t\t\tfunction append(value, name) {\n\t\t\t\t\tif (value === null || value === undefined) {\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t}\n\t\t\t\t\telse if (value === true) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (value === false) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof value === 'object' && !(value instanceof File)) {\n\t\t\t\t\t\tforOwn(value, (value, key) => {\n\t\t\t\t\t\t\tappend(value, `${name}[${key}]`)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tformData.append(name, value);\n\t\t\t\t}\n\n\t\t\t\tappend(field.value, field.formDataName())\n\t\t\t};\n\n\t\t\t// Add default model data fill method\n\t\t\tfield.fillModel = model => {\n\t\t\t\tsetProp(model, field.attribute, field.value);\n\t\t\t};\n\n\t\t\tif (!field.depends) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfield.dependentFields = this.only(...field.depends);\n\t\t})\n\t}\n\n\tall() {\n\t\treturn this.list\n\t}\n\n\tget(attribute) {\n\t\treturn this.byAttribute[attribute];\n\t}\n\n\tfind(predicate) {\n\t\treturn find(this.list, predicate);\n\t}\n\n\tonly(...attributes) {\n\t\treturn values(pick(this.byAttribute, attributes))\n\t}\n\n\texcept(...attributes) {\n\t\treturn values(omit(this.byAttribute, attributes))\n\t}\n\n\tfilter(predicate) {\n\t\treturn filter(this.list, predicate)\n\t}\n\n}\n","import Errors from '../utils/Errors';\nimport { FieldList } from \"../utils/FieldList\";\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tfields: new FieldList([]),\n\t\t\terrors: new Errors()\n\t\t}\n\t},\n\n\tmethods: {\n\t\tsetFields(fields) {\n\t\t\tthis.fields = new FieldList(fields);\n\t\t},\n\n\t\tformData(only) {\n\t\t\tlet formData = new FormData();\n\t\t\tlet fields = only || this.fields.all();\n\n\t\t\tfields.forEach(field => {\n\t\t\t\tfield.fillFormData(formData)\n\t\t\t});\n\n\t\t\treturn formData\n\t\t},\n\n\t\tsetValidationErrors(errors) {\n\t\t\tthis.errors = new Errors(errors);\n\t\t},\n\n\t}\n}\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\">\n\t\t<template slot=\"field\">\n\t\t\t<input\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\t:type=\"inputType\"\n\t\t\t\t:min=\"inputMin\"\n\t\t\t\t:max=\"inputMax\"\n\t\t\t\t:step=\"inputStep\"\n\t\t\t\t:pattern=\"inputPattern\"\n\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t\t\t:readonly=\"inputReadonly\"\n\t\t\t\t:disabled=\"inputDisabled\"/>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\treadonly: {},\n\t\t\tdisabled: {},\n\t\t\tplaceholder: {},\n\t\t\tstep: {},\n\t\t\tmin: {},\n\t\t\tmax: {},\n\t\t\tpattern: {},\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input type.\n\t\t\t */\n\t\t\tinputType() {\n\t\t\t\treturn this.field.type || 'text'\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input readonly state.\n\t\t\t */\n\t\t\tinputReadonly() {\n\t\t\t\treturn this.readonly || this.field.readonly\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input disabled state.\n\t\t\t */\n\t\t\tinputDisabled() {\n\t\t\t\treturn this.disabled || this.field.disabled\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input step amount.\n\t\t\t */\n\t\t\tinputStep() {\n\t\t\t\treturn this.step || this.field.step\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input minimum amount.\n\t\t\t */\n\t\t\tinputMin() {\n\t\t\t\treturn this.min || this.field.min\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input maximum amount.\n\t\t\t */\n\t\t\tinputMax() {\n\t\t\t\treturn this.max || this.field.max\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the pattern that should be used for the field\n\t\t\t */\n\t\t\tinputPattern() {\n\t\t\t\treturn this.pattern || this.field.pattern\n\t\t\t},\n\t\t},\n\n\t\tmethods: {\n\t\t\tsanitizeValue(value) {\n\t\t\t\tif (this.field.type === 'number') {\n\t\t\t\t\treturn Number(value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t},\n\t\t},\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\">\n\t\t<template slot=\"field\">\n\t\t\t<input\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\ttype=\"file\"\n\t\t\t\tref=\"inputElement\"\n\t\t\t\tv-on:input=\"input($event)\"\n\t\t\t\t:multiple=\"field.multiple || false\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t\t\t:accept=\"field.mimeTypes\"\n\t\t\t/>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tplaceholder: {}\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\n\t\t\tinput ($event) {\n\t\t\t\tlet files = []\n\t\t\t\tfor (let i = 0; i < $event.target.files.length; i++) {\n\t\t\t\t\tfiles.push($event.target.files[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.fieldValue = this.field.multiple ? files : files[0];\n\t\t\t\tthis.$refs.inputElement.value = '';\n\t\t\t}\n\n\t\t}\n\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\">\n\t\t<template slot=\"field\">\n\t\t\t<select\n\t\t\t\t:id=\"field.name\"\n\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\t:multiple=\"field.multiple || false\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:disabled=\"inputDisabled\">\n\t\t\t\t<option value=\"\" selected disabled>\n\t\t\t\t\t{{ field.placeholder || 'Choose an option' }}\n\t\t\t\t</option>\n\t\t\t\t<option\n\t\t\t\t\tv-for=\"option in field.options\"\n\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\t:selected=\"option.value == fieldValue\">\n\t\t\t\t\t{{ option.label }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tdisabled: {},\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input disabled state.\n\t\t\t */\n\t\t\tinputDisabled() {\n\t\t\t\treturn this.disabled || this.field.disabled\n\t\t\t},\n\t\t}\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\"\n\t\t:show-label=\"false\">\n\t\t<template slot=\"field\">\n\t\t\t<div v-for=\"(option, index) in field.options\"\n\t\t\t\t :key=\"option.value\"\n\t\t\t\t :class=\"radiosLayoutClass\"\n\t\t\t\t class=\"form-check\">\n\t\t\t\t<input\n\t\t\t\t\t:id=\"field.attribute + index\"\n\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tclass=\"form-check-input\" />\n\t\t\t\t<label :for=\"field.attribute + index\"\n\t\t\t\t\t   class=\"form-check-label\">\n\t\t\t\t\t{{ option.label }}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'RadiosField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tradiosLayout: { type: String }\n\t\t},\n\n\t\tcomputed: {\n\t\t\tradiosLayoutClass() {\n\t\t\t\tlet layout = this.radiosLayout || this.field.radiosLayout;\n\t\t\t\treturn `form-check-${layout}`;\n\t\t\t}\n\t\t}\n\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\"\n\t\t:show-label=\"false\">\n\t\t<template slot=\"field\">\n\t\t\t<div class=\"form-check\">\n\t\t\t\t<input\n\t\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\t\tclass=\"form-check-input\"\n\t\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t\t:disabled=\"inputDisabled\"/>\n\t\t\t\t<label :for=\"field.attribute\">\n\t\t\t\t\t{{ field.label || fieldLabel }}\n\t\t\t\t</label>\n\t\t\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t\t\t{{ errorMessages }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'CheckboxField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tfieldLabel: { type: String },\n\t\t\tdisabled: {},\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input disabled state.\n\t\t\t */\n\t\t\tinputDisabled() {\n\t\t\t\treturn this.disabled || this.field.disabled\n\t\t\t},\n\t\t},\n\n\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\">\n\t\t<template slot=\"field\">\n\t\t\t<div v-for=\"(option, index) in field.options\"\n\t\t\t\t :key=\"option.value\"\n\t\t\t\t :class=\"checkboxLayoutClass\"\n\t\t\t\t class=\"form-check\">\n\t\t\t\t<input\n\t\t\t\t\t:id=\"field.attribute + index\"\n\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclass=\"form-check-input\" />\n\t\t\t\t<label :for=\"field.attribute + index\"\n\t\t\t\t\t   class=\"form-check-label\">\n\t\t\t\t\t{{ option.label }}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport isArray from 'lodash-es/isArray';\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'CheckboxesField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tcheckboxLayout: { type: String }\n\t\t},\n\n\t\tcomputed: {\n\t\t\tcheckboxLayoutClass() {\n\t\t\t\tlet layout = this.checkboxLayout || this.field.checkboxLayout;\n\t\t\t\treturn `form-check-${layout}`;\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\t/*\n\t\t\t * Set the initial value for the field\n\t\t\t */\n\t\t\tsetInitialValue() {\n\t\t\t\tif (!isArray(this.fieldValue)) {\n\t\t\t\t\tthis.fieldValue = [];\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n</script>\n","<template>\n\t<component\n\t\t:is=\"layoutComponent\"\n\t\t:field=\"field\"\n\t\t:errors=\"errors\">\n\t\t<template slot=\"field\">\n\t\t\t<textarea\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\t:cols=\"inputCols\"\n\t\t\t\t:rows=\"inputRows\"\n\t\t\t\t:maxlength=\"inputMaxlength\"\n\t\t\t\tv-model=\"fieldValue\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t\t\t:readonly=\"inputReadonly\"\n\t\t\t\t:disabled=\"inputDisabled\">\n\t\t\t</textarea>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextareaField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\treadonly: {},\n\t\t\tdisabled: {},\n\t\t\tplaceholder: {},\n\t\t\tcols: {},\n\t\t\trows: {},\n\t\t\tmaxlength: {},\n\t\t},\n\n\t\tcomputed: {\n\n\t\t\t/**\n\t\t\t * Get the input readonly state.\n\t\t\t */\n\t\t\tinputReadonly() {\n\t\t\t\treturn this.readonly || this.field.readonly\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input disabled state.\n\t\t\t */\n\t\t\tinputDisabled() {\n\t\t\t\treturn this.disabled || this.field.disabled\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the textarea cols.\n\t\t\t */\n\t\t\tinputCols() {\n\t\t\t\treturn this.cols || this.field.cols\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the textarea rows.\n\t\t\t */\n\t\t\tinputRows() {\n\t\t\t\treturn this.rows || this.field.rows\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the textarea maxlength.\n\t\t\t */\n\t\t\tinputMaxlength() {\n\t\t\t\treturn this.maxlength || this.field.maxlength\n\t\t\t},\n\t\t},\n\t}\n</script>\n","<template>\n  <component\n    :is=\"layoutComponent\"\n    :field=\"field\"\n    :errors=\"errors\">\n    <template slot=\"field\">\n      <editor\n        v-model=\"fieldValue\"\n        :options=\"options\"\n        class=\"editor-field\" />\n    </template>\n  </component>\n</template>\n\n<script>\nimport { quillEditor } from 'vue-quill-editor';\nimport assign from 'lodash-es/assign';\nimport FormField from '../mixins/FormField';\n\nexport default {\n  name: 'FormEditorField',\n\n  components: {\n    Editor: quillEditor,\n  },\n\n  mixins: [FormField],\n\n  data() {\n    return {\n    };\n  },\n\n  computed: {\n    options() {\n      let options = {\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n            ['blockquote', 'code-block'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            ['link', 'image'],\n            [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            [{ font: [] }],\n            [{ align: [] }],\n            ['clean'],\n          ],\n        },\n      };\n\n      assign(options, this.field.options);\n      assign(options.modules, this.field.modules);\n\n      return options;\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .editor-field >>> .ql-editor {\n    height: 140px;\n  }\n</style>\n","import * as components from './components';\nimport assign from 'lodash-es/assign';\nimport config from './config';\n\nexport default {\n\tinstall (Vue, options) {\n\t\tassign(config, options);\n\n\t\tObject.keys(components).forEach(function (name) {\n\t\t\tVue.component(name, components[name])\n\t\t})\n\t}\n}\n","let config = {\n  previewMaxWidth: 200,\n  previewMaxHeight: 200,\n  previewMinWidth: null,\n  previewMinHeight: null,\n  previewCrop: false,\n  googleKey: null,\n};\n\nexport default config;\n","<template>\n  <div\n    :class=\"{ 'field-attachment-preview-image': isImage }\"\n    :style=\"{ 'max-width': previewOptions.previewMaxWidth + 'px' }\"\n    class=\"field-attachment-preview\">\n    <img\n      v-if=\"isImage\"\n      :src=\"imagePreview\"\n      class=\"img-fluid mb-1\"/>\n    <a\n      v-if=\"attachment.url\"\n      :href=\"attachment.url\"\n      class=\"d-block\"\n      target=\"_blank\">\n      {{ attachment.filename }}\n    </a>\n    <div v-else>\n      {{ attachment.filename }}\n    </div>\n  </div>\n</template>\n\n<script>\n  import loadImage from 'blueimp-load-image';\n  import config from './config';\n  import assign from 'lodash-es/assign';\n  import pick from 'lodash-es/pick';\n\n  export default {\n    name: 'AttachmentPreview',\n\n    props: {\n      attachment: { type: Object, required: true },\n      options: { type: Object },\n    },\n\n    data: () => ({\n      imagePreview: null\n    }),\n\n    mounted() {\n      this.setImagePreview();\n    },\n\n    computed: {\n      isImage() {\n        return this.attachment.mime_type &&\n          this.attachment.mime_type.match(/image/);\n      },\n      previewOptions() {\n        return assign(pick(config, [\n          'previewMaxWidth',\n          'previewMaxHeight',\n          'previewMinWidth',\n          'previewMinHeight',\n          'previewCrop',\n        ]), this.options)\n      }\n    },\n\n    methods: {\n      setImagePreview() {\n        if (!this.isImage) {\n          return;\n        }\n\n        if (this.attachment.file instanceof File) {\n          loadImage(\n            this.attachment.file,\n            (canvas) => {\n              this.imagePreview = canvas.toDataURL();\n            },\n            {\n              canvas: true,\n              maxWidth: this.previewOptions.previewMaxWidth,\n              maxHeight: this.previewOptions.previewMaxHeight,\n              minWidth: this.previewOptions.previewMinWidth,\n              minHeight: this.previewOptions.previewMinHeight,\n              crop: this.previewOptions.previewCrop,\n            }\n          );\n        } else {\n          this.imagePreview = this.attachment.url;\n        }\n      }\n    },\n\n    watch: {\n      'attachment': function () {\n        this.setImagePreview();\n      }\n    },\n  }\n</script>\n","<template>\n  <component\n    :is=\"layoutComponent\"\n    :field=\"field\"\n    :errors=\"errors\">\n    <template slot=\"field\">\n      <div class=\"custom-file\">\n        <input\n          :id=\"field.attribute\"\n          :class=\"errorClasses\"\n          :dusk=\"field.attribute\"\n          :multiple=\"field.multiple || false\"\n          :accept=\"field.mimeTypes\"\n          ref=\"input\"\n          type=\"file\"\n          class=\"custom-file-input\"\n          @input=\"input($event)\">\n        <label\n          :for=\"field.attribute\"\n          class=\"custom-file-label\">{{ field.placeholder || 'Click to select files' }}</label>\n      </div>\n      <div\n        v-if=\"hasAttached && field.multiple\">\n        <draggable\n          :options=\"draggableOptions\"\n          v-model=\"sortables\"\n          class=\"field-attachments mt-4\">\n          <div\n            v-for=\"attachment in field.attached\"\n            :key=\"attachment.id\"\n            class=\"field-attachment field-attachment-draggable bg-light rounded p-2\">\n            <attachment-preview\n              :attachment=\"attachment\"\n              :options=\"previewOptions\" />\n            <button\n              type=\"button\"\n              @click.prevent=\"remove(attachment)\"\n              class=\"close rounded btn-remove bg-secondary\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </draggable>\n        <button\n          v-if=\"hasAttached && field.multiple\"\n          @click.stop.prevent=\"clear()\"\n          class=\"btn btn-sm btn-warning\">Clear all</button>\n      </div>\n      <div\n        v-if=\"hasAttached && !field.multiple\">\n        <div\n          class=\"field-attachments mt-4\">\n          <div class=\"field-attachment bg-light rounded p-2\">\n            <attachment-preview\n              :attachment=\"field.attached\"\n              :options=\"previewOptions\"/>\n            <button\n              type=\"button\"\n              @click.stop.prevent=\"clear()\"\n              class=\"close rounded btn-remove bg-secondary\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </template>\n  </component>\n</template>\n\n<script>\n  import draggable from 'vuedraggable';\n  import assign from 'lodash-es/assign';\n  import FormField from '../mixins/FormField';\n  import AttachmentPreview from './AttachmentPreview.vue';\n  import pick from 'lodash-es/pick';\n\n  function fileToAttached(file) {\n  return {\n    id: Math.random(),\n    file,\n    filename: file.name,\n    mime_type: file.type,\n    size: file.size,\n  };\n}\n\nexport default {\n  components: {\n    draggable,\n    AttachmentPreview,\n  },\n\n  mixins: [FormField],\n\n  data() {\n    return {\n    };\n  },\n\n  computed: {\n    hasAttached() {\n      return this.field.multiple ?\n        !! this.field.attached.length :\n        !! this.field.attached;\n    },\n    draggableOptions() {\n      const options = { direction: 'horizontal' };\n      assign(options, this.field.draggableOptions);\n      return options;\n    },\n    previewOptions() {\n      return pick(this.field, [\n        'previewMaxWidth',\n        'previewMaxHeight',\n        'previewMinWidth',\n        'previewMinHeight',\n        'previewCrop',\n      ]);\n    },\n    sortables: {\n      get() {\n        return this.field.attached;\n      },\n      set(sorted) {\n        this.field.attached = sorted;\n        this.fieldValue = this.field.attached.map((attachment) => {\n          return attachment.file ? attachment.file : attachment.id;\n        });\n      }\n    },\n  },\n\n  methods: {\n    setInitialValue() {\n      if (!this.field.multiple) {\n        return;\n      }\n\n      if (!this.field.attached) {\n        this.field.attached = [];\n      }\n\n      if (!this.fieldValue) {\n        this.fieldValue = [];\n      }\n    },\n    remove(attachment) {\n      if (this.field.multiple) {\n        this.field.attached = this.field.attached.filter((a) => a.id !== attachment.id);\n        this.fieldValue = this.fieldValue.filter((id) => {\n          if (attachment.file) {\n            return id !== attachment.file;\n          }\n\n          return id !== attachment.id\n        });\n      } else {\n        this.field.attached = null;\n        this.fieldValue = null;\n      }\n    },\n    clear() {\n      if (this.field.multiple) {\n        this.field.attached = [];\n        this.fieldValue = [];\n      } else {\n        this.field.attached = null;\n        this.fieldValue = null;\n      }\n    },\n    input($event) {\n      const files = [];\n\n      for (let i = 0; i < $event.target.files.length; i += 1) {\n        files.push($event.target.files[i]);\n      }\n\n      this.field.attached = this.field.multiple ?\n        this.field.attached.concat(files.map(fileToAttached)) :\n        fileToAttached(files[0]);\n\n      this.fieldValue = this.field.multiple ? this.fieldValue.concat(files) : files[0];\n\n      this.$refs.input.value = '';\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .field-attachments {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-start;\n  }\n\n  .field-attachment {\n    position: relative;\n    margin-right: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .btn-remove {\n    position: absolute;\n    top: -.5rem;\n    right: -.5rem;\n    line-height: 100%;\n    height: 1.5rem;\n    width: 1.5rem;\n    opacity: 1;\n    color: white;\n  }\n\n  .field-attachment-preview {\n    font-size: 85%;\n  }\n\n  .field-attachment-draggable {\n    cursor: move;\n  }\n</style>\n","<template>\n  <component\n    :is=\"layoutComponent\"\n    :field=\"field\"\n    :errors=\"errors\">\n    <template slot=\"field\">\n      <vue-google-autocomplete\n        v-if=\"googleLoaded\"\n        :id=\"field.attribute + '-address'\"\n        :placeholder=\"field.placeholder\"\n        :types=\"geocodeTypes\"\n        ref=\"address\"\n        classname=\"form-control\"\n        @placechanged=\"setAddressData\"\n        @keypress.enter.prevent />\n      <div\n        v-if=\"field.withMap\"\n        class=\"mt-2 embed-responsive embed-responsive-16by9\">\n        <div\n          ref=\"map\"\n          :id=\"field.attribute + '-map'\"\n          class=\"embed-responsive-item rounded\">\n          Map is loading ...\n        </div>\n      </div>\n    </template>\n  </component>\n</template>\n\n<script>\n  import VueGoogleAutocomplete from 'vue-google-autocomplete';\n  import FormField from '../mixins/FormField';\n  import defaults from 'lodash-es/defaults';\n  import config from './config';\n\n  export default {\n    name: 'FormLocationField',\n\n    mixins: [FormField],\n\n    components: {\n      VueGoogleAutocomplete,\n    },\n\n    data: () => ({\n      googleLoaded: false,\n      map: null,\n      marker: null,\n      geocoder: null,\n    }),\n\n    computed: {\n      geocodeTypes() {\n        return this.field.types;\n      }\n    },\n\n    watch: {\n      'fieldValue.address': function () {\n        this.updateAddress();\n      },\n      'fieldValue.latlng': function () {\n        this.updateMarker();\n      },\n      'fieldValue.zoom': function () {\n        this.updateZoom();\n      },\n    },\n\n    mounted() {\n      if (window.google === undefined) {\n        this.loadGoogleMaps().then(() => {\n          this.googleLoaded = true;\n          this.$nextTick(this.initAutocomplete);\n        });\n      } else {\n        this.googleLoaded = true;\n        this.$nextTick(this.initAutocomplete);\n      }\n    },\n\n    methods: {\n      setInitialValue() {\n        if (!this.fieldValue) {\n          this.fieldValue = {};\n        }\n      },\n      loadGoogleMaps() {\n        return new Promise((resolve) => {\n          let mapsScript = document.createElement('script');\n          mapsScript.onload = resolve;\n          mapsScript.setAttribute('src', `https://maps.googleapis.com/maps/api/js?key=${config.googleKey}&libraries=places`);\n          document.head.appendChild(mapsScript);\n        });\n      },\n      initAutocomplete() {\n        if (this.fieldValue && this.fieldValue.address) {\n          this.updateAddress();\n        }\n\n        if (this.field.withMap) {\n          this.initMap();\n        }\n      },\n      updateAddress() {\n        this.$refs.address.update(this.fieldValue.address);\n      },\n      initMap() {\n        const options = defaults(this.field.withMap, {\n          center: {lat: 41.299, lng: 69.24},\n          zoom: 1\n        });\n\n        if (this.fieldValue && this.fieldValue.latlng) {\n          const [lat, lng] = this.fieldValue.latlng.split(',').map(parseFloat);\n          options.center = {lat, lng};\n        }\n\n        if (this.fieldValue && this.fieldValue.zoom) {\n          options.zoom = this.fieldValue.zoom;\n        }\n\n        this.map = new google.maps.Map(this.$refs.map, options);\n\n        this.marker = new google.maps.Marker({\n          position: options.center,\n          map: this.map,\n          draggable: true,\n        });\n\n        this.geocoder = new google.maps.Geocoder;\n\n        this.marker.addListener('dragend', () => {\n          this.setAddressFromMarker();\n        });\n\n        this.map.addListener('zoom_changed', () => {\n          this.setZoomFromMap();\n        });\n      },\n      setAddressFromMarker() {\n        let position = this.marker.getPosition();\n        this.$set(this.fieldValue, 'latlng', [position.lat(), position.lng()].join(','));\n\n        this.geocoder.geocode({'location': position}, (results, status) => {\n          if (status === 'OK') {\n            this.setAddressFromGeocode(results);\n          } else {\n            console.error('Geocoder failed due to: ' + status);\n          }\n        });\n      },\n      setAddressFromGeocode(results) {\n        if (results[0]) {\n          this.$set(this.fieldValue, 'address', results[0].formatted_address);\n        }\n      },\n      setAddressData: function (addressData, placeResultData, id) {\n        this.$set(this.fieldValue, 'latlng', addressData.latitude + ',' + addressData.longitude);\n        this.$set(this.fieldValue, 'address', placeResultData.formatted_address);\n      },\n      updateMarker() {\n        if (!this.marker || !this.fieldValue.latlng) {\n          return;\n        }\n\n        let latlng = {\n          lat: parseFloat(this.fieldValue.latlng.split(',')[0]),\n          lng: parseFloat(this.fieldValue.latlng.split(',')[1]),\n        };\n\n        this.marker.setPosition(latlng);\n        this.map.panTo(latlng);\n        this.map.setZoom(this.fieldValue.zoom || 12);\n      },\n      updateZoom() {\n        if (!this.map || !this.fieldValue.zoom) {\n          return;\n        }\n\n        this.map.setZoom(this.fieldValue.zoom);\n      },\n      setMarkerFromResult(addressData) {\n        let latlng = {\n          lat: addressData.latitude,\n          lng: addressData.longitude,\n        };\n        this.marker.setPosition(latlng);\n        this.map.panTo(latlng);\n        this.map.setZoom(this.fieldValue.zoom || 12);\n      },\n      setZoomFromMap() {\n        this.$set(this.fieldValue, 'zoom', this.map.getZoom());\n      },\n    },\n  };\n</script>\n","<template>\n  <component\n    :is=\"layoutComponent\"\n    :field=\"field\"\n    :errors=\"errors\">\n    <template slot=\"field\">\n      <v-select\n        ref=\"select\"\n        :disabled=\"busy\"\n        :id=\"field.attribute\"\n        :options=\"options\"\n        :filterable=\"filterable\"\n        :placeholder=\"field.placeholder\"\n        v-model=\"selected\"\n        :class=\"errorClasses\"\n        :multiple=\"field.multiple || false\"\n        class=\"form-control\"\n        @search=\"onSearch\">\n        <template\n          slot=\"option\"\n          slot-scope=\"option\">\n          <img\n            v-if=\"option.image\"\n            :src=\"option.image\"\n            style=\"width: 45px\"\n            class=\"float-left mr-2 rounded\" />\n          <div>{{ option.label }}</div>\n          <div\n            v-if=\"option.extra\"\n            class=\"text-muted text-sm\">\n            {{ option.extra }}\n          </div>\n        </template>\n      </v-select>\n    </template>\n  </component>\n</template>\n\n<script>\n  import map from 'lodash-es/map';\n  import defaults from 'lodash-es/defaults';\n  import debounce from 'lodash-es/debounce';\n  import castArray from 'lodash-es/castArray';\n  import find from 'lodash-es/find';\n  import head from 'lodash-es/head';\n  import isEqual from 'lodash-es/isEqual';\n  import vSelect from 'vue-select';\n  import FormField from '../mixins/FormField';\n\n  export default {\n    components: {\n      vSelect,\n    },\n\n    mixins: [FormField],\n\n    data() {\n      return {\n        options: [],\n        params: {},\n        busy: false,\n      };\n    },\n    computed: {\n      selected: {\n        get() {\n          const selected = [];\n          const values = this.fieldValue === null || this.fieldValue === undefined\n            ? []\n            : castArray(this.fieldValue);\n          values.forEach((value) => {\n            selected.push(find(this.options, {value}) || this.getMissedOption(value));\n          });\n\n          if (this.field.multiple) {\n            return selected;\n          }\n\n          return head(selected);\n        },\n        set(option) {\n          if (this.field.multiple) {\n            const values = map(option, 'value');\n            if (!isEqual(values, this.fieldValue)) {\n              this.fieldValue = values;\n            }\n            return;\n          }\n          this.fieldValue = option ? option.value : null;\n        },\n      },\n      filterable() {\n        return !this.field.ajax;\n      }\n    },\n    created() {\n      // Take initial options from field config\n      // It could contain initially selected option\n      this.options = this.field.options || [];\n      this.params = defaults(this.field.source ? this.field.source.params : {}, {\n        per_page: 9,\n      });\n\n      this.fetch = debounce(() => {\n        this.loading(true);\n\n        const promise = this.$http({\n          url: this.field.source.url,\n          params: this.params,\n        });\n\n        promise\n          .then((response) => {\n            this.options = response.data.data;\n          })\n          .finally(() => {\n            this.loading(false);\n          });\n\n        return promise;\n      }, 300);\n    },\n    mounted() {\n      if (!this.options.length && this.field.preload) {\n        this.fetch();\n      }\n    },\n    methods: {\n      loading(value = true) {\n        this.$refs.select.toggleLoading(value);\n      },\n      onSearch(search) {\n        if (!this.field.ajax) {\n          return;\n        }\n        this.params[this.field.queryParam || 'query'] = search;\n        this.fetch();\n      },\n      getMissedOption(value) {\n        return {\n          value,\n          label: this.$refs.select && this.$refs.select.mutableLoading ? '...' : '(Missed option)',\n        };\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n  .form-control.v-select {\n    padding: 0 10px;\n\n    .dropdown-toggle {\n      border: none;\n      padding: 0;\n\n      &::after {\n        display: none;\n      }\n\n      input[type=search] {\n        margin: 0;\n      }\n    }\n\n    .selected-tag {\n      margin-top: 0;\n    }\n\n    .vs__selected-options {\n      margin-left: -7px;\n      padding-left: 0;\n    }\n\n    .vs__actions {\n      padding-right: 0;\n    }\n  }\n</style>\n","import assign from 'lodash-es/assign';\nimport config from './config';\nimport * as components from './index';\n\nexport default {\n  install (Vue, options) {\n    assign(config, options);\n\n    Object.keys(components).forEach(function (name) {\n      Vue.component(name, components[name])\n    });\n  }\n}\n"],"names":["values","Vue","config","components"],"mappings":"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"}