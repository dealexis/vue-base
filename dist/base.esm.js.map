{"version":3,"file":"base.esm.js","sources":["src/Base.js","src/common/Field.vue","src/utils/Errors.js","src/common/Fields.vue","src/mixins/FieldLayoutMixin.js","src/common/DefaultLayout.vue","src/form/Undefined.vue","src/form/VericalLayout.vue","src/form/HorizontalLayout.vue","src/mixins/HandlesValidationErrors.js","src/mixins/FormField.js","src/utils/FieldList.js","src/mixins/FormComponent.js","src/form/TextField.vue","src/form/FileField.vue","src/form/SelectField.vue","src/form/CheckboxField.vue","src/form/TextareaField.vue","src/components.js","src/plugin.js"],"sourcesContent":["import Vue from 'vue'\n\nexport default class Base {\n    constructor(config) {\n        this.bus = new Vue();\n        this.bootingCallbacks = [];\n        this.config = config;\n    }\n\n    /**\n     * Register a callback to be called before Nova starts. This is used to bootstrap\n     * addons, tools, custom fields, or anything else Nova needs\n     */\n    booting(callback) {\n        this.bootingCallbacks.push(callback)\n    }\n\n    /**\n     * Execute all of the booting callbacks.\n     */\n    boot() {\n        //this.bootingCallbacks.forEach(callback => callback(Vue, router))\n\n        this.bootingCallbacks = []\n    }\n\n    /**\n     * Register a listener on Nova's built-in event bus\n     */\n    $on(...args) {\n        this.bus.$on(...args)\n    }\n\n    /**\n     * Register a one-time listener on the event bus\n     */\n    $once(...args) {\n        this.bus.$once(...args)\n    }\n\n    /**\n     * De-register a listener on the event bus\n     */\n    $off(...args) {\n        this.bus.$off(...args)\n    }\n\n    /**\n     * Emit an event on the event bus\n     */\n    $emit(...args) {\n        this.bus.$emit(...args)\n    }\n}\n","<template>\n\t<component\n\t\t:is=\"'form-' + field.component\"\n\t\t:field=\"field\"\n\t\t:model=\"model\"\n\t\t@input=\"input\"\n\t\t:errors=\"errors\"\n\t\t:layout=\"layout\"\n\t/>\n</template>\n\n<script>\n\texport default {\n\t\tname: \"Field\",\n\t\tprops: {\n\t\t\tfield: {\n\t\t\t\tdefault: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcomponent: 'undefined'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: Object,\n\t\t\terrors: {},\n\t\t\tlayout: {}\n\t\t},\n\t\tmethods: {\n\t\t\tinput: function ($event) {\n\t\t\t\tthis.$emit('input', $event)\n\t\t\t}\n\t\t}\n\t}\n</script>\n","class Errors {\n    /**\n     * Create a new Errors instance.\n     */\n    constructor(errors = {}) {\n        this.record(errors);\n    }\n\n    /**\n     * Get all the errors.\n     *\n     * @return {object}\n     */\n    all() {\n        return this.errors;\n    }\n\n    /**\n     * Determine if any errors exists for the given field or object.\n     *\n     * @param {string} field\n     */\n    has(field) {\n        let hasError = this.errors.hasOwnProperty(field);\n\n        if (!hasError) {\n            const errors = Object.keys(this.errors).filter(\n                e => e.startsWith(`${field}.`) || e.startsWith(`${field}[`)\n            );\n\n            hasError = errors.length > 0;\n        }\n\n        return hasError;\n    }\n\n    first(field) {\n        return this.get(field)[0];\n    }\n\n    get(field) {\n        return this.errors[field] || [];\n    }\n\n    /**\n     * Determine if we have any errors.\n     */\n    any() {\n        return Object.keys(this.errors).length > 0;\n    }\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     */\n    record(errors = {}) {\n        this.errors = errors;\n    }\n\n    /**\n     * Clear a specific field, object or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field) {\n        if (!field) {\n            this.errors = {};\n\n            return;\n        }\n        \n        let errors = Object.assign({}, this.errors);\n\n        Object.keys(errors)\n            .filter(e => e === field || e.startsWith(`${field}.`) || e.startsWith(`${field}[`))\n            .forEach(e => delete errors[e]);\n        \n        this.errors = errors;\n    }\n}\n\nexport default Errors;\n","<template>\n\t<div>\n\t\t<field v-for=\"field in fields\" :key=\"field.attribute\" :field=\"field\" :model=\"model\" :errors=\"errors\" :layout=\"layout\"  />\n\t</div>\n</template>\n\n<script>\n\timport Errors from '../utils/Errors';\n\n\texport default {\n\t\tname: \"Fields\",\n\n\t\tprops: {\n\t\t\tfields: {},\n\t\t\tmodel: Object,\n\t\t\terrors: {\n\t\t\t\tdefault: () => new Errors()\n\t\t\t},\n\t\t\tlayout: String\n\t\t}\n\t}\n</script>\n","export default {\n\tprops: {\n\t\tfield: {type: Object, required: true},\n\t\tfieldLabel: {type: String},\n\t\tlayoutClass: {type: String},\n\t\tshowLabel: {type: Boolean, default: true},\n\t\tshowHelpText: {type: Boolean, default: true},\n\t},\n}\n","<template>\n\t<div :class=\"layoutClass\">\n\t\t<slot name=\"field\"/>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n","<template>\n\n</template>\n\n<script>\n\texport default {\n\t\tname: 'FormUndefinedField'\n\t}\n</script>\n","<template>\n\t<div class=\"form-group\">\n\t\t<label v-if=\"showLabel\" :for=\"field.attribute\">\n\t\t\t{{ field.label || fieldLabel }}\n\t\t</label>\n\t\t<slot name=\"field\"/>\n\t\t<slot name=\"errors\"/>\n\t\t<small v-if=\"showHelpText\" class=\"form-text text-muted\">\n\t\t\t{{ field.helpText }}\n\t\t</small>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n","<template>\n\t<div class=\"form-group row\">\n\t\t<label :for=\"field.attribute\" class=\"col-sm-4 col-form-label text-sm-right\">\n\t\t\t{{ field.label || fieldLabel }}\n\t\t</label>\n\t\t<div class=\"col-sm-8\">\n\t\t\t<slot name=\"field\"/>\n\t\t\t<slot name=\"errors\"/>\n\t\t\t<small v-if=\"showHelpText\" class=\"form-text text-muted\">\n\t\t\t\t{{ field.helpText }}\n\t\t\t</small>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport FieldLayoutMixin from \"../mixins/FieldLayoutMixin\";\n\n\texport default {\n\t\tmixins: [ FieldLayoutMixin ]\n\t}\n</script>\n","import Errors from '../utils/Errors'\n\nexport default {\n\tprops: {\n\t\terrors: {\n\t\t\tdefault: () => new Errors(),\n\t\t},\n\t},\n\n\tdata: () => ({\n\t\terrorClass: 'is-invalid',\n\t}),\n\n\tcomputed: {\n\t\terrorClasses() {\n\t\t\treturn this.hasError ? [this.errorClass] : []\n\t\t},\n\n\t\thasError() {\n\t\t\treturn this.errors.has(this.field.attribute)\n\t\t},\n\n\t\tfirstError() {\n\t\t\tif (this.hasError) {\n\t\t\t\treturn this.errors.first(this.field.attribute)\n\t\t\t}\n\t\t},\n\t},\n}\n","import HandlesValidationErrors from './HandlesValidationErrors';\nimport keyBy from \"lodash-es/keyBy\";\nimport mapValues from \"lodash-es/mapValues\";\n\nexport default {\n\tmixins: [ HandlesValidationErrors ],\n\n\tprops: {\n\t\tfield: { type: Object, required: true },\n\t\tmodel: { type: Object },\n\t\tlayout: { default: 'default' },\n\t\tlayoutClass: { type: String },\n\t},\n\n\tdata: () => ({}),\n\n\tcomputed: {\n\t\tlayoutComponent: function () {\n\t\t\treturn this.layout + '-layout';\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.setInitialValue();\n\n\t\t// Add a default fill methods for the field\n\t\tthis.field.fillFormData = this.fillFormData;\n\n\t\t// Register a global event for setting the field's value\n\t\tBase.$on(this.field.attribute + '-value', this.handleChange);\n\n\t\tif (this.field.depends && this.field.depends.length) {\n\t\t\tthis.field.depends.forEach(attr => {\n\t\t\t\tBase.$on(attr + '-change', value => {\n\t\t\t\t\tthis.triggerDependentChange(attr, value);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.triggerDependentChange();\n\t\t}\n\t},\n\n\twatch: {\n\t\t'field.value': function (value) {\n\t\t\tBase.$emit(this.field.attribute + '-change', value);\n\n\t\t\tthis.fillModel();\n\t\t}\n\t},\n\n\tdestroyed() {\n\t\tBase.$off(this.field.attribute + '-value');\n\n\t\tif (this.field.depends && this.field.depends.length) {\n\t\t\tthis.field.depends.forEach(attr => {\n\t\t\t\tBase.$off(attr + '-change');\n\t\t\t})\n\t\t}\n\t},\n\n\tmethods: {\n\t\t/*\n\t\t * Set the initial value for the field\n\t\t */\n\t\tsetInitialValue() {\n\t\t},\n\n\t\t/**\n\t\t * Provide a function that fills a passed FormData object with the\n\t\t * field's internal value attribute\n\t\t */\n\t\tfillFormData(formData) {\n\t\t\tformData.append(this.field.attribute, this.field.value || '');\n\t\t},\n\n\t\t/**\n\t\t * Provide a function that fills a passed model object with the\n\t\t * field's internal value attribute\n\t\t */\n\t\tfillModel() {\n\t\t\tif (!this.model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$set(this.model, this.field.attribute, this.field.value);\n\t\t},\n\n\t\t/**\n\t\t * Update the field's internal value\n\t\t */\n\t\thandleChange(value) {\n\t\t\tthis.field.value = value;\n\t\t\tthis.fillModel();\n\t\t},\n\n\t\ttriggerDependentChange(attribute, value) {\n\t\t\tlet values = mapValues(keyBy(this.field.dependentFields, 'attribute'), 'value');\n\t\t\tthis.handleDependentChange(attribute, value, values)\n\t\t},\n\n\t\thandleDependentChange(attribute, value, values) {\n\t\t\t//console.log(this.field.attribute + ':handleDependentChange', arguments)\n\t\t}\n\t},\n}\n","import pick from \"lodash-es/pick\";\nimport values from \"lodash-es/values\";\nimport keyBy from \"lodash-es/keyBy\";\nimport omit from \"lodash-es/omit\";\n\nexport class FieldList {\n\n\tconstructor(fields) {\n\t\tthis.list = fields;\n\t\tthis.byAttribute = keyBy(fields, 'attribute');\n\n\t\t// Collect dependencies and assign\n\t\tfields.forEach(field => {\n\t\t\t// Add default form data fill method\n\t\t\tfield.fillFormData = formData => {\n\t\t\t\tformData.append(field.attribute, field.value || '');\n\t\t\t};\n\n\t\t\t// Add default model data fill method\n\t\t\tfield.fillModel = model => {\n\t\t\t\tmodel[field.attribute] = field.value;\n\t\t\t};\n\n\t\t\tif (!field.depends) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfield.dependentFields = this.only(...field.depends);\n\t\t})\n\t}\n\n\tall() {\n\t\treturn this.list\n\t}\n\n\tget(attribute) {\n\t\treturn this.byAttribute[attribute];\n\t}\n\n\tonly(...attributes) {\n\t\treturn values(pick(this.byAttribute, attributes))\n\t}\n\n\texcept(...attributes) {\n\t\treturn values(omit(this.byAttribute, attributes))\n\t}\n\n}\n","import Errors from '../utils/Errors';\nimport { FieldList } from \"../utils/FieldList\";\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tfields: new FieldList([]),\n\t\t\terrors: new Errors()\n\t\t}\n\t},\n\n\tmethods: {\n\t\tsetFields(fields) {\n\t\t\tthis.fields = new FieldList(fields);\n\t\t},\n\n\t\tformData(only) {\n\t\t\tlet formData = new FormData();\n\t\t\tlet fields = only || this.fields.all();\n\n\t\t\tfields.forEach(field => {\n\t\t\t\tfield.fillFormData(formData)\n\t\t\t});\n\n\t\t\treturn formData\n\t\t},\n\n\t\tsetValidationErrors(errors) {\n\t\t\tthis.errors = new Errors(errors);\n\t\t},\n\n\t}\n}\n","<template>\n\t<component :is=\"layoutComponent\" :field=\"field\">\n\t\t<template slot=\"field\">\n\t\t\t<input\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\t:type=\"inputType\"\n\t\t\t\t:min=\"inputMin\"\n\t\t\t\t:max=\"inputMax\"\n\t\t\t\t:step=\"inputStep\"\n\t\t\t\t:pattern=\"inputPattern\"\n\t\t\t\tv-model=\"field.value\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t\t/>\n\t\t</template>\n\t\t<template slot=\"errors\">\n\t\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t\t{{ firstError }}\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tplaceholder: {},\n\t\t\tstep: {},\n\t\t\tmin: {},\n\t\t\tmax: {},\n\t\t\tpattern: {},\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input type.\n\t\t\t */\n\t\t\tinputType() {\n\t\t\t\treturn this.field.type || 'text'\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input step amount.\n\t\t\t */\n\t\t\tinputStep() {\n\t\t\t\treturn this.step || this.field.step\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input minimum amount.\n\t\t\t */\n\t\t\tinputMin() {\n\t\t\t\treturn this.min || this.field.min\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the input maximum amount.\n\t\t\t */\n\t\t\tinputMax() {\n\t\t\t\treturn this.max || this.field.max\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the pattern that should be used for the field\n\t\t\t */\n\t\t\tinputPattern() {\n\t\t\t\treturn this.pattern || this.field.pattern\n\t\t\t},\n\t\t},\n\t}\n</script>\n","<template>\n\t<component :is=\"layoutComponent\" :field=\"field\">\n\t\t<template slot=\"field\">\n\t\t\t<input\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\ttype=\"file\"\n\t\t\t\tv-on:input=\"input($event)\"\n\t\t\t\t:multiple=\"field.multiple || false\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t\t/>\n\t\t</template>\n\t\t<template slot=\"errors\">\n\t\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t\t{{ firstError }}\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tplaceholder: {}\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\n\t\t\tinput ($event) {\n\t\t\t\tlet files = []\n\t\t\t\tfor (let i = 0; i < $event.target.files.length; i++) {\n\t\t\t\t\tfiles.push($event.target.files[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.field.value = this.field.multiple ? files : files[0]\n\t\t\t}\n\n\t\t}\n\n\t}\n</script>\n","<template>\n\t<component :is=\"layoutComponent\" :field=\"field\">\n\t\t<template slot=\"field\">\n\t\t\t<select\n\t\t\t\t:id=\"field.name\"\n\t\t\t\tv-model=\"field.value\"\n\t\t\t\t:multiple=\"field.multiple || false\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\">\n\t\t\t\t<option value=\"\" selected disabled>\n\t\t\t\t\t{{ field.placeholder || 'Choose an option' }}\n\t\t\t\t</option>\n\t\t\t\t<option\n\t\t\t\t\tv-for=\"option in field.options\"\n\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\t:selected=\"option.value == field.value\">\n\t\t\t\t\t{{ option.label }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</template>\n\t\t<template slot=\"errors\">\n\t\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t\t{{ firstError }}\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tmixins: [ FormField ],\n\t}\n</script>\n","<template>\n\t<div class=\"form-check\">\n\t\t<input\n\t\t\t:id=\"field.attribute\"\n\t\t\t:dusk=\"field.attribute\"\n\t\t\ttype=\"checkbox\"\n\t\t\tv-model=\"field.value\"\n\t\t\tclass=\"form-check-input\"\n\t\t\t:class=\"errorClasses\"\n\t\t\t:placeholder=\"inputPlaceholder\"\n\t\t/>\n\t\t<label for=\"field.attribute\">\n\t\t\t{{ field.label || fieldLabel }}\n\t\t</label>\n\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t{{ firstError }}\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tfieldLabel: { type: String },\n\t\t},\n\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\n\t\t\tinput ($event) {\n\t\t\t\tlet files = []\n\t\t\t\tfor (let i = 0; i < $event.target.files.length; i++) {\n\t\t\t\t\tfiles.push($event.target.files[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.field.value = this.field.multiple ? files : files[0]\n\t\t\t}\n\n\t\t}\n\n\t}\n</script>\n","<template>\n\t<component :is=\"layoutComponent\" :field=\"field\">\n\t\t<template slot=\"field\">\n\t\t\t<textarea\n\t\t\t\t:id=\"field.attribute\"\n\t\t\t\t:dusk=\"field.attribute\"\n\t\t\t\t:cols=\"inputCols\"\n\t\t\t\t:rows=\"inputRows\"\n\t\t\t\tv-model=\"field.value\"\n\t\t\t\tclass=\"form-control\"\n\t\t\t\t:class=\"errorClasses\"\n\t\t\t\t:placeholder=\"inputPlaceholder\">\n\t\t\t</textarea>\n\t\t</template>\n\t\t<template slot=\"errors\">\n\t\t\t<div v-if=\"hasError\" class=\"invalid-feedback\">\n\t\t\t\t{{ firstError }}\n\t\t\t</div>\n\t\t</template>\n\t</component>\n</template>\n\n<script>\n\timport { FormField } from '../mixins';\n\n\texport default {\n\t\tname: 'FormTextareaField',\n\n\t\tmixins: [ FormField ],\n\n\t\tprops: {\n\t\t\tplaceholder: {},\n\t\t\tcols: {},\n\t\t\trows: {},\n\t\t},\n\n\t\tcomputed: {\n\n\t\t\t/**\n\t\t\t * Get the input placeholder.\n\t\t\t */\n\t\t\tinputPlaceholder() {\n\t\t\t\treturn this.placeholder || this.field.placeholder\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the textarea cols.\n\t\t\t */\n\t\t\tinputCols() {\n\t\t\t\treturn this.cols || this.field.rows\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the textarea rows.\n\t\t\t */\n\t\t\tinputRows() {\n\t\t\t\treturn this.rows || this.field.rows\n\t\t\t},\n\t\t},\n\t}\n</script>\n","// import Vue from 'vue'\nimport Field from './common/Field.vue'\nimport Fields from './common/Fields.vue'\nimport DefaultLayout from './common/DefaultLayout.vue'\nimport FormUndefined from './form/Undefined.vue'\nimport VerticalLayout from './form/VericalLayout.vue'\nimport HorizontalLayout from './form/HorizontalLayout.vue'\nimport FormTextField from './form/TextField.vue'\nimport FormFileField from './form/FileField.vue'\nimport FormSelectField from './form/SelectField.vue'\nimport FormCheckboxField from './form/CheckboxField.vue'\nimport FormTextareaField from './form/TextareaField.vue'\n\nexport {\n\tField,\n\tFields,\n\tFormUndefined,\n\tDefaultLayout,\n\tVerticalLayout,\n\tHorizontalLayout,\n\tFormTextField,\n\tFormFileField,\n\tFormSelectField,\n\tFormCheckboxField,\n\tFormTextareaField\n}\n","import Base from \"./Base\"\nimport * as components from './components'\n\nexport default {\n\tinstall (Vue, options) {\n\t\twindow.Base = new Base();\n\t\tObject.keys(components).forEach(function (name) {\n\t\t\tVue.component(name, components[name])\n\t\t})\n\t}\n}\n"],"names":["Base","values","Vue"],"mappings":"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"}